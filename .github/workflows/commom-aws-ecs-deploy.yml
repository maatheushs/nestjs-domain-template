name: Common (AWS ECS Deploy)

on: 
  workflow_call:
    inputs:
      image_tag:
        type: string
        required: true
      environment:
        type: string
        required: true
      environment_url:
        type: string
        required: true

jobs:
  aws-ecs-deploy:
    name: Deploy AWS ECS
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.environment }}
      url: ${{ inputs.environment_url }}
    env:
      IMAGE_TAG: ${{ inputs.image_tag }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get repository name
        id: repo-name
        uses: MariachiBear/get-repo-name-action@v1.1.0
        with:
          string-case: 'lowercase'

      - uses: kanga333/variable-mapper@master
        with:
          key: "${{ inputs.environment }}"
          map: |
            {
              "dev": {
                "cluster": "no-cluster!!!",
                "sufix": "-dev"
              },
              "stage": {
                "cluster": "omega-ec2-stage",
                "sufix": "-stage"
              },
              "production": {
                "cluster": "omega-ec2-prod",
                "sufix": "-prod"
              }
            }

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1
    
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Download task definition
        env:
          ECS_TASK_DEFINITION: ${{ steps.repo-name.outputs.repository-name }}${{ env.sufix }}
        run: |
          aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION --query taskDefinition > task-definition.json

      - name: Render Amazon ECS task definition
        id: deploy-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        env:
          ECR_REPOSITORY: ${{ steps.repo-name.outputs.repository-name }}
          ECS_CONTAINER_NAME: ${{ steps.repo-name.outputs.repository-name }}
        with:
          task-definition: task-definition.json
          container-name: ${{ env.ECS_CONTAINER_NAME }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        env:
          ECS_SERVICE: ${{ steps.repo-name.outputs.repository-name }}
          ECS_CLUSTER: ${{ env.cluster }}
        with:
          task-definition: ${{ steps.deploy-task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
